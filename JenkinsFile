
pipeline {
  agent any
  stages {
    stage('Full Flow 1') {
      parallel {
        stage('Core') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
				{
                    bat 'behave -D url=%Environment% -f allure_behave.formatter:AllureFormatter -o allure-results .\\BDD\\features\\core_full_flow.feature -f pretty --no-capture'
                }
          }
        }

        stage('comprehensive') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
			    {
                    bat 'behave -D url=%Environment% -f allure_behave.formatter:AllureFormatter -o allure-results .\\BDD\\features\\comprehensive_full_flow.feature -f pretty --no-capture'
                }
          }
        }

      }
    }
    stage('Full Flow 2') {
      parallel {
        stage('micro_comprehensive') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
			    {
                    bat 'behave -D url=%Environment% -f allure_behave.formatter:AllureFormatter -o allure-results .\\BDD\\features\\micro_comprehensive_full_flow.feature -f pretty --no-capture'
                }
          }
        }

        stage('corporate_governance') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
			    {
                    bat 'behave -D url=%Environment% -f allure_behave.formatter:AllureFormatter -o allure-results .\\BDD\\features\\corporate_governance_full_flow.feature -f pretty --no-capture'
                }
          }
        }

      }
    }
    stage('Full Flow 3') {
      parallel {
        stage('LCTR') {
          steps {
		  if ("${params.Environment}".toLowerCase().contains('test') || "${params.Environment}".toLowerCase().contains('stage'))
                        {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
							{
								echo "this was executed"
							}
                        }
                        else
                        {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
							{
								echo "This stage was escapsed"
							}
                        }

               }
        }

        stage('micro_core') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
			    {
                    bat 'behave -D url=%Environment% -f allure_behave.formatter:AllureFormatter -o allure-results .\\BDD\\features\\micro_core_full_flow.feature -f pretty --no-capture'
                }
          }
        }

      }
    }
	stage('Download 1') {
      parallel {
        stage('subindustry_default') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
			    {
                    bat 'behave -D url=%Environment% -f allure_behave.formatter:AllureFormatter -o allure-results .\\BDD\\features\\subindustry_default.feature -f pretty --no-capture'
                }
               }
        }
		stage('company_product_univers') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
			    {
                    bat 'behave -D url=%Environment% -f allure_behave.formatter:AllureFormatter -o allure-results .\\BDD\\features\\company_product_univers.feature -f pretty --no-capture'
                }
          }
        }
		stage('activation_matrix') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
			    {
                    bat 'behave -D url=%Environment% -f allure_behave.formatter:AllureFormatter -o allure-results .\\BDD\\features\\activation_matrix.feature -f pretty --no-capture'
                }
          }
        }
		stage('company_type') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
			    {
                    bat 'behave -D url=%Environment% -f allure_behave.formatter:AllureFormatter -o allure-results .\\BDD\\features\\company_type.feature -f pretty --no-capture'
                }
          }
        }

      }
    }
	stage('Download 2') {
      parallel {
        stage('cutoff_values') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
			    {
                    bat 'behave -D url=%Environment% -f allure_behave.formatter:AllureFormatter -o allure-results .\\BDD\\features\\cutoff_values.feature -f pretty --no-capture'
                }
               }
        }
		stage('extra_indicator') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
			    {
                    bat 'behave -D url=%Environment% -f allure_behave.formatter:AllureFormatter -o allure-results .\\BDD\\features\\extra_indicator.feature -f pretty --no-capture'
                }
          }
        }
		stage('hidden_to_client') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
			    {
                    bat 'behave -D url=%Environment% -f allure_behave.formatter:AllureFormatter -o allure-results .\\BDD\\features\\hidden_to_client.feature -f pretty --no-capture'
                }
          }
        }
		stage('Projections') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
			    {
                    bat 'behave -D url=%Environment% -f allure_behave.formatter:AllureFormatter -o allure-results .\\BDD\\features\\Projections.feature -f pretty --no-capture'
                }
          }
        }

      }
    }
	stage('Download 3') {
      parallel {
        stage('qualitative_overlay') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
			    {
                    bat 'behave -D url=%Environment% -f allure_behave.formatter:AllureFormatter -o allure-results .\\BDD\\features\\qualitative_overlay.feature -f pretty --no-capture'
                }
               }
        }
		stage('weight_matrix_tests') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
			    {
                    bat 'behave -D url=%Environment% -f allure_behave.formatter:AllureFormatter -o allure-results .\\BDD\\features\\weight_matrix_tests.feature -f pretty --no-capture'
                }
          }
        }
	  }
    }

   }
}