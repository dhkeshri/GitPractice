
pipeline {
  agent any
  parameters
  {
       string defaultValue: 'stage', name: 'Environment'
   }
  stages {
    stage('Full Flow 3') {
      parallel {
        stage('LCTR') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
			    script
			    {
                  if ("${params.Environment}".toLowerCase().contains('test') || "${params.Environment}".toLowerCase().contains('stage'))
                        {
                            echo 'LCTR'
                        }

               }

        }

        stage('micro_core') {
          steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE')
			    {
                    echo 'micro_core'
                }
          }
        }

      }
    }
	}

   }
    post {
        always
            {
              echo "Publish allure report"
              allure includeProperties: false, jdk: '', results: [[path: 'allure-result']]
              bat 'allure-combine allure-report'
            }

	}
}